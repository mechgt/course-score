<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label_Available" xml:space="preserve">
    <value>Available</value>
  </data>
  <data name="Label_Basic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="Label_Calculating" xml:space="preserve">
    <value>Calculating...</value>
  </data>
  <data name="Label_CalculatingRecords" xml:space="preserve">
    <value>Calculating {0} Records</value>
    <comment>Calculating 10k Records</comment>
  </data>
  <data name="Label_ChartDetails" xml:space="preserve">
    <value>Chart Details</value>
  </data>
  <data name="Label_Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="Label_Climbs" xml:space="preserve">
    <value>Climbs</value>
  </data>
  <data name="Label_CourseScore" xml:space="preserve">
    <value>Course Score</value>
  </data>
  <data name="Label_Cycling" xml:space="preserve">
    <value>Cycling</value>
  </data>
  <data name="Label_Defaults" xml:space="preserve">
    <value>Defaults</value>
  </data>
  <data name="Label_Descents" xml:space="preserve">
    <value>Descents</value>
  </data>
  <data name="Label_DistancePercent" xml:space="preserve">
    <value>Distance Percent</value>
  </data>
  <data name="Label_ElevationPercent" xml:space="preserve">
    <value>Elevation Percent</value>
  </data>
  <data name="Label_End" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="Label_EvalCategoryLimit" xml:space="preserve">
    <value>Eval version limited to {0} distance categories</value>
    <comment>Eval version limited to 4 distance categories</comment>
  </data>
  <data name="Label_EvalHistoryLimit" xml:space="preserve">
    <value>Eval version locked to evaluate previous {0} days.  See settings page to unlock.</value>
    <comment>Eval version locked to evaluate previous 90 days.  See settings page to unlock.</comment>
  </data>
  <data name="Label_Fill" xml:space="preserve">
    <value>Fill</value>
  </data>
  <data name="Label_FindHillsLikeThis" xml:space="preserve">
    <value>Find similar hills in all activities for current category</value>
  </data>
  <data name="Label_FindRoutesLikeThis" xml:space="preserve">
    <value>Find this route in all activities for current category</value>
  </data>
  <data name="Label_FindThisHillInAllActivites" xml:space="preserve">
    <value>Find this hill in all activities for current category</value>
  </data>
  <data name="Label_FindThisSplitInAllActivities" xml:space="preserve">
    <value>Find this split in all activities for current category</value>
  </data>
  <data name="Label_Hardest" xml:space="preserve">
    <value>Hardest</value>
  </data>
  <data name="Label_HardestClimb" xml:space="preserve">
    <value>Hardest Climb</value>
  </data>
  <data name="Label_HillClassification" xml:space="preserve">
    <value>Hill Classification</value>
  </data>
  <data name="Label_HillDistanceRequired" xml:space="preserve">
    <value>Hill Distance Required</value>
  </data>
  <data name="Label_HillElevationRequired" xml:space="preserve">
    <value>Hill Elevation Required</value>
  </data>
  <data name="Label_HillFinderSettings" xml:space="preserve">
    <value>Hill Finder Settings</value>
  </data>
  <data name="Label_HillId" xml:space="preserve">
    <value>Hill id</value>
  </data>
  <data name="Label_HillScore" xml:space="preserve">
    <value>Hill Score</value>
  </data>
  <data name="Label_HillScoreEquation" xml:space="preserve">
    <value>Hill Score Equation</value>
  </data>
  <data name="Label_ListSettings" xml:space="preserve">
    <value>List Settings...</value>
  </data>
  <data name="Label_Longest" xml:space="preserve">
    <value>Longest</value>
  </data>
  <data name="Label_LongestClimb" xml:space="preserve">
    <value>Longest Climb</value>
  </data>
  <data name="Label_MaxDescentElevationChange" xml:space="preserve">
    <value>Max Descent Elevation Change</value>
  </data>
  <data name="Label_MaxDescentLength" xml:space="preserve">
    <value>Max Descent Length</value>
  </data>
  <data name="Label_MinAvgGrade" xml:space="preserve">
    <value>Min Average Grade</value>
  </data>
  <data name="Label_MinGrade" xml:space="preserve">
    <value>Min. Grade</value>
  </data>
  <data name="Label_Overall" xml:space="preserve">
    <value>Overall</value>
  </data>
  <data name="Label_Running" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="Label_Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Label_SelectedCharts" xml:space="preserve">
    <value>Selected Charts</value>
  </data>
  <data name="Label_Sport" xml:space="preserve">
    <value>Sport</value>
  </data>
  <data name="Label_Steepest" xml:space="preserve">
    <value>Steepest</value>
  </data>
  <data name="Label_SteepestClimb" xml:space="preserve">
    <value>Steepest Climb</value>
  </data>
  <data name="Label_Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="Label_VAM" xml:space="preserve">
    <value>VAM</value>
  </data>
  <data name="Label_wKg" xml:space="preserve">
    <value>W/kg</value>
  </data>
  <data name="Message_ErrorExporting" xml:space="preserve">
    <value>Error on activity</value>
  </data>
  <data name="Message_ExportingElevation" xml:space="preserve">
    <value>Exporting elevation data for</value>
  </data>
  <data name="Message_InvalidCharacter" xml:space="preserve">
    <value>Invalid character.</value>
  </data>
  <data name="Message_NoGPS" xml:space="preserve">
    <value>This hill does not have GPS data for it. Exact hills will not be found.</value>
  </data>
  <data name="Tooltip_DistancePercent" xml:space="preserve">
    <value>If the current descent's distance covered divided by the hill's overall distance is greater than this value, the descent isn't part of this hill (ex .33).</value>
  </data>
  <data name="Tooltip_ElevationPercent" xml:space="preserve">
    <value>If the current descent's elevation change divided by the hill's overall elevation gain is greater than this value, the descent isn't part of this hill (ex .33).</value>
  </data>
  <data name="Tooltip_HillDistanceRequired" xml:space="preserve">
    <value>The distance covered to call this a hill.</value>
  </data>
  <data name="Tooltip_HillElevationRequired" xml:space="preserve">
    <value>The required elevation change to call this a hill.</value>
  </data>
  <data name="Tooltip_MaxDescentElevationChange" xml:space="preserve">
    <value>Maximum elevation change for a single descent before it breaks up the hill (ex '200' for a 200m drop).</value>
  </data>
  <data name="Tooltip_MaxDescentLength" xml:space="preserve">
    <value>Maximum length for a single descent before it breaks up the hill.</value>
  </data>
  <data name="Tooltip_MinAvgGrade" xml:space="preserve">
    <value>Minimum average grade for this to be considered a hill (ex .04).</value>
  </data>
</root>