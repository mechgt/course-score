<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Label_Available" xml:space="preserve">
    <value>Disponible</value>
  </data>
  <data name="Label_Basic" xml:space="preserve">
    <value>Basic</value>
  </data>
  <data name="Label_Calculating" xml:space="preserve">
    <value>Calcul...</value>
  </data>
  <data name="Label_CalculatingRecords" xml:space="preserve">
    <value>Calcul de {0} enregistrements</value>
  </data>
  <data name="Label_ChartDetails" xml:space="preserve">
    <value>Détails du graphique</value>
  </data>
  <data name="Label_Clear" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Label_Climbs" xml:space="preserve">
    <value>Côte</value>
  </data>
  <data name="Label_CourseScore" xml:space="preserve">
    <value>Course Score</value>
  </data>
  <data name="Label_Cycling" xml:space="preserve">
    <value>Vélo</value>
  </data>
  <data name="Label_Defaults" xml:space="preserve">
    <value>Par défaut</value>
  </data>
  <data name="Label_Descents" xml:space="preserve">
    <value>Pentes</value>
  </data>
  <data name="Label_DistancePercent" xml:space="preserve">
    <value>Pourcentage de distance</value>
  </data>
  <data name="Label_ElevationPercent" xml:space="preserve">
    <value>Pourcentage d'altitude</value>
  </data>
  <data name="Label_End" xml:space="preserve">
    <value>Fin</value>
  </data>
  <data name="Label_EvalCategoryLimit" xml:space="preserve">
    <value>Version d'évaluation limitée à {0} catégories de distance</value>
  </data>
  <data name="Label_EvalHistoryLimit" xml:space="preserve">
    <value>Version d'évaluation bloquée pour évaluer les {0} jours précédents. Voir la page de réglages pour débloquer</value>
  </data>
  <data name="Label_Fill" xml:space="preserve">
    <value>Remplir</value>
  </data>
  <data name="Label_FindHillsLikeThis" xml:space="preserve">
    <value>Trouver des côte similaire dans toutes les activités pour la catégorie en cours</value>
  </data>
  <data name="Label_FindThisHillInAllActivites" xml:space="preserve">
    <value>Trouver cette côte dans toutes les activités pour la catégorie en cours</value>
  </data>
  <data name="Label_Hardest" xml:space="preserve">
    <value>Le plus dur</value>
  </data>
  <data name="Label_HardestClimb" xml:space="preserve">
    <value>Côte la plus dure</value>
  </data>
  <data name="Label_HillDistanceRequired" xml:space="preserve">
    <value>Distance de côte requise</value>
  </data>
  <data name="Label_HillElevationRequired" xml:space="preserve">
    <value>Altitude de côte requise</value>
  </data>
  <data name="Label_HillFinderSettings" xml:space="preserve">
    <value>Paramétrage pour chercher les côtes</value>
  </data>
  <data name="Label_HillId" xml:space="preserve">
    <value>Identification des côtes</value>
  </data>
  <data name="Label_HillScore" xml:space="preserve">
    <value>Score de côte</value>
  </data>
  <data name="Label_HillScoreEquation" xml:space="preserve">
    <value>Equation du score de côte</value>
  </data>
  <data name="Label_Longest" xml:space="preserve">
    <value>Plus long</value>
  </data>
  <data name="Label_LongestClimb" xml:space="preserve">
    <value>Côte la plus longue</value>
  </data>
  <data name="Label_MaxDescentElevationChange" xml:space="preserve">
    <value>Max. changement d'altitude en descente</value>
  </data>
  <data name="Label_MaxDescentLength" xml:space="preserve">
    <value>Max. longueur de pente</value>
  </data>
  <data name="Label_MinAvgGrade" xml:space="preserve">
    <value>Note moyenne minimum</value>
  </data>
  <data name="Label_Overall" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="Label_Running" xml:space="preserve">
    <value>Course à pied</value>
  </data>
  <data name="Label_Score" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="Label_SelectedCharts" xml:space="preserve">
    <value>Graphiques sélectionnés</value>
  </data>
  <data name="Label_Sport" xml:space="preserve">
    <value>Sport</value>
  </data>
  <data name="Label_Steepest" xml:space="preserve">
    <value>Le plus raide</value>
  </data>
  <data name="Label_SteepestClimb" xml:space="preserve">
    <value>Côte la plus raide</value>
  </data>
  <data name="Label_VAM" xml:space="preserve">
    <value>VAM</value>
  </data>
  <data name="Label_wKg" xml:space="preserve">
    <value>W/Kg</value>
  </data>
  <data name="Message_InvalidCharacter" xml:space="preserve">
    <value>Caractère non valide</value>
  </data>
  <data name="Message_NoGPS" xml:space="preserve">
    <value>Cette côte n'a pas de données GPS pour ça. La côte exacte ne sera pas trouvée.</value>
  </data>
  <data name="Tooltip_DistancePercent" xml:space="preserve">
    <value>Si la distance couvert de la descente en cours divisée par la distance totale de la côte est supérieure à cette valeur, la descente ne fait pas partie de cette colline (ex : 0.33).</value>
  </data>
  <data name="Tooltip_ElevationPercent" xml:space="preserve">
    <value>Si le changement d'altitude de la descente en cours divisé par le gain de la côte d'élévation globale est supérieure à cette valeur, la descente ne fait pas partie de cette colline (ex : 0.33).</value>
  </data>
  <data name="Tooltip_HillDistanceRequired" xml:space="preserve">
    <value>La distance parcourue pour être considéré comme une côte.</value>
  </data>
  <data name="Tooltip_HillElevationRequired" xml:space="preserve">
    <value>Le changement d'altitude requis pour être considéré comme une côte.</value>
  </data>
  <data name="Tooltip_MaxDescentElevationChange" xml:space="preserve">
    <value>Le changement d'altitude maximum pour une seule pente avant de tomber sur une côte (ex : '200 ' pour une chute de 200m).</value>
  </data>
  <data name="Tooltip_MaxDescentLength" xml:space="preserve">
    <value>Longueur maximale pour une seule pente avant de tomber sur une côte.</value>
  </data>
  <data name="Tooltip_MinAvgGrade" xml:space="preserve">
    <value>Note moyenne minimale pour être considérée comme une côte (ex : 0.04)</value>
  </data>
</root>